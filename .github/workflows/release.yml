name: Release

on:
  push:
    branches:
      - production

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 14
        uses: actions/setup-node@master
        with:
          node-version: '14'
          check-latest: true
          
      - name: Install Dependencies
        run: yarn

      - name: Build packages /dist
        run: yarn compile

      - name: Run packages tests
        run: yarn test

      - name: Create Release Pull Request and Publish to NPM
        id: changesets
        uses: changesets/action@master
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: yarn release
          commit: 'chore(release): version packages'
          title: 'ðŸŽ‰ New component(s) release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Send a Slack notification if a publish happens
      #   if: steps.changesets.outputs.published == 'true'
      #   # You can do something when a publish happens.
      #   run:
      #     my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was
      #     published!"